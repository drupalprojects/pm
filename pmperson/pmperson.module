<?php
/**
 * @file
 */
define('PMPERSON_RESOLVE_DEPENDENCIES_LINK', 'admin/config/pm/migration/pmperson');


/**
 * Implements hook_menu().
 */
function pmperson_menu() {
  $items[PMPERSON_RESOLVE_DEPENDENCIES_LINK] = array(
    'title' => 'PM Person migrate status',
    'page callback' => 'pmperson_migrate_page_callback',
    'access callback' => 'update_access_allowed',
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/pmperson.migrate.inc',
  );
  return $items;
}

/**
 * Implements hook_forms().
 */
function pmperson_forms($form_id, $args) {
  $forms = array();
  if (substr($form_id, 0, 35) == 'pmperson_migrate_email_adjust_form_') {
    $forms[$form_id] = array('callback' => 'pmperson_migrate_email_adjust_form');
  }
  return $forms;
}

// @todo Need to consider how to protect user information when not stored as a separate node.
/**
 * Implements hook_permission().
 */
function pmperson_permission() {
  return array(
    'Project Management Person: access' => array(
      'title' => t('Access PM Person'),
      'description' => t('Allows the user to see pages and blocks associated with the PM Person module, but does not control which persons are shown within them.'),
    ),
    'Project Management Person: view all' => array(
      'title' => t('View Any PM Person'),
      'description' => t('Allows the user to view any person and see any person in lists or dropdowns elsewhere on the site.'),
    ),
    'Project Management Person: view of user organization' => array(
      'title' => t('View PM Persons in own Organization'),
      'description' => t('For persons assigned to the same PM Organization as a PM Person, allows the user associated with that Person to view the person and see the person in lists or dropdowns elsewhere on the site.'),
    ),
  );
}

/**
 * Implements hook_node_grants().
 */
function pmperson_node_grants($account, $op) {

  if (!isset($account->pmorganization_nid)) {
    _pmperson_user_load($account);
  }
  $grants = array();
  switch ($op) {
    case 'view':
      if (user_access('Project Management Person: view all', $account)) {
        $grants['pmperson_view_all'] = array(0);
      }
      if (user_access('Project Management Person: view own', $account)) {
        $grants['pmperson_view_own'] = array($account->uid);
      }
      if (user_access('Project Management Person: view of user organization', $account)) {
        $grants['pmperson_view_if_user_organization'] = array($account->pmorganization_nid);
      }
      if (user_access('Project Management Person: view when linked to own user account', $account)) {
        $grants['pmperson_view_linked'] = array($account->uid);
      }
      break;

    case 'update':
      if (user_access('Project Management Person: edit all', $account)) {
        $grants['pmperson_update_all'] = array(0);
      }
      if (user_access('Project Management Person: edit own', $account)) {
        $grants['pmperson_update_own'] = array($account->uid);
      }
      if (user_access('Project Management Person: edit of user organization', $account)) {
        $grants['pmperson_update_if_user_organization'] = array($account->pmorganization_nid);
      }
      if (user_access('Project Management Person: edit when linked to own user account', $account)) {
        $grants['pmperson_update_linked'] = array($account->uid);
      }
      break;

    case 'delete':
      if (user_access('Project Management Person: delete all', $account)) {
        $grants['pmperson_delete_all'] = array(0);
      }
      if (user_access('Project Management Person: delete own', $account)) {
        $grants['pmperson_delete_own'] = array($account->uid);
      }
      if (user_access('Project Management Person: delete of user organization', $account)) {
        $grants['pmperson_delete_if_user_organization'] = array($account->pmorganization_nid);
      }
      if (user_access('Project Management Person: delete when linked to own user account', $account)) {
        $grants['pmperson_delete_linked'] = array($account->uid);
      }
      break;
  }
  return $grants;
}

// @todo Do we want to have some sort of list of users with PM Person fields filled out?
/**
 * Implements hook_pm_dashboard_links().
 */
function pmperson_pm_dashboard_links($type) {
  $links = array();
  if ($type == 'page' || $type == 'block') {
    $links[] = array(
      'theme' => 'pm_dashboard_link',
      'title' => t('People'),
      'icon' => 'pmpeople',
      'path' => 'pm/people',
      'params' => array(),
      'node_type' => 'pmperson',
      'add_type' => 'pmperson',
      'map' => array(),
      'weight' => 2,
    );
  }
  return $links;
}

/**
 * Dummy function to handle errors.
 * // TODO: Remove this function when all other PM submodules have been ported.
 */
function _pmperson_user_load() {

}
