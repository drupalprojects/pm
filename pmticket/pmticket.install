<?php
/**
 * @file
 * Installation functions for the Project Management project module.
 */

/**
 * Implements hook_install().
 */
function pmticket_install() {
  variable_set('node_options_pmticket', array('status'));

  // PM Permissions default configurations.
  variable_set('pmpermission_field_assigned_reference', 'pm_assigned');
  variable_set('pmpermission_field_pm_reference', 'pm_manager');
  variable_set('pmpermission_field_parent_reference_for_pmtask', 'pmticket_parent');
  variable_set('pmpermission_node_pmticket_enabled', TRUE);

  // Create and attaches fields to pmticket content type.
  module_load_include('inc', 'pmticket', 'includes/pmticket.migrate');

  // Parameter $sandbox is passed as a placeholder.
  $sandbox = array();
  pmticket_migrate_create_fields($sandbox);
}

/**
 * Implements hook_disable().
 */
function pmticket_disable() {
  drupal_set_message(t('Nodes of type "Ticket" have not been deleted on disabling Project Management Ticket. Please note that they will now have reduced functionality, and will not be protected by Project Management Ticket access controls.'), 'warning');
}

/**
 * Implements hook_uninstall().
 */
function pmticket_uninstall() {
  variable_del('pmpermission_node_pmticket_enabled');
}

/**
 * Implements hook_update_last_removed().
 */
function pmticket_update_last_removed() {
  return 6202;
}

/**
 * Migrate PM Ticket nodes to field_api fields.
 */
function pmticket_update_7105(&$sandbox) {
  module_load_include('inc', 'pmticket', 'includes/pmticket.migrate');

  if (pmticket_migrate_update_could_be_performed()) {
    return pmticket_migrate($sandbox);
  }
}

/**
 * Implements hook_update_dependencies().
 */
function pmticket_update_dependencies() {
  // pmperson_update_7104() migrates pmperson data to drupal user.
  // pmticket migration depends on its completion.
  $dependencies['pmticket'][7105] = array(
    'pmproject' => 7104,
  );

  return $dependencies;
}


/**
 * Implements hook_requirements().
 */
function pmticket_requirements($phase) {
  $requirements = array();
  $t = get_t();
  if ($phase == 'runtime') {
    // Quickly check if there are any pmticket nodes in the node table.
    $result = db_query('SELECT n.nid FROM {node} n WHERE n.type = :type LIMIT 1', array(':type' => 'pmticket'));
    $count = $result->rowCount();
    $link = l('Node Convert', 'https://www.drupal.org/project/node_convert');
    $description = $t('PM Issue have been deprecated in favour of PM Issue.');
    $description .= "<br>";
    if($count) {
      $description .= $t('You can use !link to convert nodes to PM Issue and after that disable this module', array('!link' => $link));
    }
    else {
      $description .= $t('There are no PM Issue nodes in the system, You can disable this module.');
    }
    $requirements['pmticket depcrated'] = array(
      'title' => $t('PM Issue'),
      'description' => $description,
      'value' => $t('Enabled'),
      'severity' => REQUIREMENT_WARNING,
    );
  }
  return $requirements;
}
