<?php
/**
 * @file
 * Test definitions for the PM Organization module
 */
class PMOrganizationTestCase extends DrupalWebTestCase {

  /**
   * Provides metadata about this group of test cases.
   */
  public static function getInfo() {
    return array(
      'name' => 'PM Organization functionality',
      'description' => 'Test the functionality of the PM Organization module',
      'group' => 'Project Management',
    );
  }

  /**
   * Standard configuration for all test cases.
   */
  public function setUp() {
    parent::setUp('views', 'pm', 'link', 'email', 'addressfield', 'pmorganization');
  }

  /**
   * Test case ensuring that the list view is present.
   */
  public function testpmorganizationList() {
    // Anonymous user.
    $this->drupalGet('pm/organizations');
    $this->assertText(t('Organizations'), t('Make sure the correct page has been displayed by checking that the title is "Organizations".'));

    // Authenticated user.
    $authenticated_user = $this->drupalCreateUser();
    $this->drupalLogin($authenticated_user);
    $this->drupalGet('pm/organizations');
    $this->assertText(t('Organizations'), t('Make sure the correct page has been displayed by checking that the title is "Organizations".'));
  }

  /**
   * Test case ensuring that organization nodes can be created.
   */
  public function testpmorganizationCreate() {
    // Log in with permission to create test content.
    $user = $this->drupalCreateUser(array(
      'create Organization content',
    ));
    $this->drupalLogin($user);

    // Create test content.
    $edit = array(
      'title' => $this->randomName(32),
      'body[LANGUAGE_NONE][0][value]' => $this->randomName(64),
    );
    $this->drupalPost('node/add/pmorganization', $edit, t('Save'));
    $this->assertText(t('Organization @title has been created.', array('@title' => $edit['title'])));
  }
}
