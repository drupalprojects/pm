<?php
/**
 * @file
 */

/**
 * Implements hook_help().
 */
function pmorganization_help($path, $arg) {
  $output = '';

  switch ($path) {
    case "admin/help#pmorganization":
      $output = '<p>' . t("Provides organization support for Project Management") . '</p>';
      break;
  }

  return $output;
}

/**
 * Implements hook_menu().
 */
function pmorganization_menu() {
  $items = array();
  $items['admin/config/pm/organization'] = array(
    'title' => 'Organizations',
    'description' => 'Configure default PM Organization.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pmorganization_admin_settings'),
    'access arguments' => array('Project Management: access administration pages'),
  );
  return $items;
}

/**
 * Implements hook_node_info().
 */
function pmorganization_node_info() {
  return array(
    'pmorganization' => array(
      'name' => t('Organization'),
      'base' => 'pmorganization',
      'description' => t("An organization for Project Management."),
      'title_label' => t("Name"),
      'body_label' => t("Description"),
    )
  );
}

/**
 * Implements hook_form().
 */
function pmorganization_form($node, &$form_state) {
  $breadcrumb = array(
    l(t('Project Management'), 'pm'),
    l(t('Organizations'), 'pm/organizations'),
  );
  drupal_set_breadcrumb($breadcrumb);
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_view().
 */
function pmorganization_view($node, $view_mode) {
  if ($view_mode == 'full' && node_is_page($node)) {
    $breadcrumb = array(
      l(t('Project Management'), 'pm'),
      l(t('Organizations'), 'pm/organizations'),
    );
    drupal_set_breadcrumb($breadcrumb);
  }
  return $node;
}

/**
 * Admin settings form for pmproject module
 */
function pmorganization_admin_settings() {
  $form = array();

  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title'))
    ->condition('status', 1)
    ->condition('type', 'pmorganization')
    ->addTag('node_access')
    ->orderBy('title', 'ASC');

  $result = $query->execute();

  $organizations = array();
  while ($organization = $result->fetchObject()) {
    $organizations[$organization->nid] = $organization->title;
  }

  if (count($organizations) > 0) {
    $form['pm_organization_nid'] = array(
      '#type' => 'select',
      '#title' => t('Host organization'),
      '#options' => $organizations,
      '#default_value' => variable_get('pm_organization_nid', 0),
      '#description' => t('The organization that owns this system'),
      '#weight' => -30,
    );
  }
  else {
    $form['pm_organization_nid'] = array(
      '#type' => 'item',
      '#title' => t('Host organization'),
      '#markup' => t('There are no Project Management Organizations in the system.') . '<br />' . l(t('Create a Project Management Organization'), 'node/add/pmorganization'),
    );
  }
  return system_settings_form($form);
}

/**
 * Implements hook_views_api().
 */
function pmorganization_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'pmorganization'),
  );
}

/**
 * Implements hook_pm_dashboard_links().
 */
function pmorganization_pm_dashboard_links($type) {
  $links = array();
  if ($type == 'page' || $type == 'block') {
    $links[] = array(
      'theme' => 'pm_dashboard_link',
      'title' => t('Organizations'),
      'icon' => 'pmorganizations',
      'path' => 'pm/organizations',
      'params' => array(),
      'node_type' => 'pmorganization',
      'add_type' => 'pmorganization',
      'map' => array(),
      'weight' => 1,
    );
  }
  return $links;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function pmorganization_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == "field_group" && $api == "field_group") {
    return array("version" => "1");
  }
}
