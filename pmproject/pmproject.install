<?php
/**
 * @file
 * Installation functions for the Project Management project module.
 */

/**
 * Implements hook_install().
 */
function pmproject_install() {
  variable_set('node_options_pmproject', array('status'));

  // PM Permissions default configurations.
  variable_set('pmpermission_field_assigned_reference', 'pm_assigned');
  variable_set('pmpermission_field_pm_reference', 'pm_manager');
  variable_set('pmpermission_field_parent_reference_for_pmproject', 'pmproject_parent');
  variable_set('pmpermission_node_pmproject_enabled', TRUE);

  // Create and attaches fields to pmproject content type.
  module_load_include('inc', 'pmproject', 'includes/pmproject.migrate');

  // Parameter $sandbox is passed as a placeholder.
  $sandbox = array();
  pmproject_migrate_create_fields($sandbox);
}

/**
 * Implements hook_disable().
 */
function pmproject_disable() {
  module_load_include('inc', 'pm', 'includes/pm.install');
  $module = 'pmproject';

  // Set standardised message.
  pm_disable_message($module, 'projects');
}

/**
 * Implements hook_uninstall().
 */
function pmproject_uninstall() {
  module_load_include('inc', 'pm', 'includes/pm.install');
  $module = 'pmproject';

  // Delete items created by his module.
  pm_uninstall_variables($module);
  pm_uninstall_fields($module);

  // Set standardised message.
  pm_uninstall_message($module, 'projects');
}

/**
 * Implements hook_schema().
 */
function pmproject_schema() {
  $schema['pmproject_index'] = array(
    'description' => 'Maintains denormalized information about pm project relationships.',
    'fields' => array(
      'nid' => array(
        'description' => 'The {node}.nid this record tracks.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'pmproject_nid' => array(
        'description' => 'The pmproject nid.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the node was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'nid' => array('nid'),
      'pmproject_nid' => array('pmproject_nid'),
    ),
    'foreign keys' => array(
      'tracked_node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'pmproject_nid' => array(
        'table' => 'node',
        'columns' => array('pmproject_nid' => 'nid'),
      ),
    ),
  );
  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function pmproject_update_last_removed() {
  return 6202;
}

/**
 * Migrate PM Project nodes to field_api fields.
 */
function pmproject_update_7105(&$sandbox) {
  if (!module_exists('pmpermission')) {
    module_enable(array('pmpermission'));
  }
  module_load_include('inc', 'pmproject', 'includes/pmproject.migrate');

  if (pmproject_migrate_update_could_be_performed()) {
    return pmproject_migrate($sandbox);
  }
}

/**
 * Create pmproject_index table.
 */
function pmproject_update_7300() {
  $schema = module_invoke('pmproject', 'schema');
  db_create_table('pmproject_index', $schema['pmproject_index']);
}

/**
 * Implements hook_update_dependencies().
 */
function pmproject_update_dependencies() {
  // pmperson_update_7104() migrates pmperson data to drupal user.
  // pmproject migration depends on its completion.
  $dependencies['pmproject'][7105] = array(
    'pmperson' => 7104,
  );

  return $dependencies;
}
